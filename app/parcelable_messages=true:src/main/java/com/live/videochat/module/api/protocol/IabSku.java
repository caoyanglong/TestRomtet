// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 190:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Float;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 应用市场商品
 */
public final class IabSku extends Message<IabSku, IabSku.Builder> {
  public static final ProtoAdapter<IabSku> ADAPTER = new ProtoAdapter_IabSku();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SKU = "";

  public static final String DEFAULT_TYPE = "";

  public static final Integer DEFAULT_PLACEMENT = 0;

  public static final Boolean DEFAULT_ISACTIVE = false;

  public static final Integer DEFAULT_MONTHS = 0;

  public static final Integer DEFAULT_COUNTS = 0;

  public static final Integer DEFAULT_PRIORITY = 0;

  public static final Integer DEFAULT_REWARDCOUNTS = 0;

  public static final Integer DEFAULT_REWARDVIPDAYS = 0;

  public static final Float DEFAULT_DISCOUNT = 0.0f;

  /**
   * 商品ID;
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String sku;

  /**
   * 商品类型, inapp:应用内商品，可管理的; subs:订阅类商品;
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String type;

  /**
   * 商品展示位：1：钻石市场;2:vip订阅;3:首充奖励商品
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer placement;

  /**
   * 商品状态, true:上架; false:下架;（控制商品显示）下架的商品不再向用户展示，但必须下发，防止用户之前购买下架商品但由于不可避免的原因未给用户提供对应的服务(如加金币)。
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isActive;

  /**
   * 可购买的钻石/金币数
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer months;

  /**
   * 可购买的钻石/金币数
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer counts;

  /**
   * 商品优先级，0为最低优先级，用于商品排序
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer priority;

  /**
   * 购买该商品奖励的金币数
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer rewardCounts;

  /**
   * 首充奖励奖励的vip天数；
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer rewardVipDays;

  /**
   * 商品折扣;如20%的折扣(0.2)
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
  )
  public final Float discount;

  public IabSku(String sku, String type, Integer placement, Boolean isActive, Integer months, Integer counts, Integer priority, Integer rewardCounts, Integer rewardVipDays, Float discount) {
    this(sku, type, placement, isActive, months, counts, priority, rewardCounts, rewardVipDays, discount, ByteString.EMPTY);
  }

  public IabSku(String sku, String type, Integer placement, Boolean isActive, Integer months, Integer counts, Integer priority, Integer rewardCounts, Integer rewardVipDays, Float discount, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.sku = sku;
    this.type = type;
    this.placement = placement;
    this.isActive = isActive;
    this.months = months;
    this.counts = counts;
    this.priority = priority;
    this.rewardCounts = rewardCounts;
    this.rewardVipDays = rewardVipDays;
    this.discount = discount;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.sku = sku;
    builder.type = type;
    builder.placement = placement;
    builder.isActive = isActive;
    builder.months = months;
    builder.counts = counts;
    builder.priority = priority;
    builder.rewardCounts = rewardCounts;
    builder.rewardVipDays = rewardVipDays;
    builder.discount = discount;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof IabSku)) return false;
    IabSku o = (IabSku) other;
    return unknownFields().equals(o.unknownFields())
        && sku.equals(o.sku)
        && type.equals(o.type)
        && placement.equals(o.placement)
        && Internal.equals(isActive, o.isActive)
        && Internal.equals(months, o.months)
        && Internal.equals(counts, o.counts)
        && Internal.equals(priority, o.priority)
        && Internal.equals(rewardCounts, o.rewardCounts)
        && Internal.equals(rewardVipDays, o.rewardVipDays)
        && Internal.equals(discount, o.discount);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + sku.hashCode();
      result = result * 37 + type.hashCode();
      result = result * 37 + placement.hashCode();
      result = result * 37 + (isActive != null ? isActive.hashCode() : 0);
      result = result * 37 + (months != null ? months.hashCode() : 0);
      result = result * 37 + (counts != null ? counts.hashCode() : 0);
      result = result * 37 + (priority != null ? priority.hashCode() : 0);
      result = result * 37 + (rewardCounts != null ? rewardCounts.hashCode() : 0);
      result = result * 37 + (rewardVipDays != null ? rewardVipDays.hashCode() : 0);
      result = result * 37 + (discount != null ? discount.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", sku=").append(sku);
    builder.append(", type=").append(type);
    builder.append(", placement=").append(placement);
    if (isActive != null) builder.append(", isActive=").append(isActive);
    if (months != null) builder.append(", months=").append(months);
    if (counts != null) builder.append(", counts=").append(counts);
    if (priority != null) builder.append(", priority=").append(priority);
    if (rewardCounts != null) builder.append(", rewardCounts=").append(rewardCounts);
    if (rewardVipDays != null) builder.append(", rewardVipDays=").append(rewardVipDays);
    if (discount != null) builder.append(", discount=").append(discount);
    return builder.replace(0, 2, "IabSku{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<IabSku, Builder> {
    public String sku;

    public String type;

    public Integer placement;

    public Boolean isActive;

    public Integer months;

    public Integer counts;

    public Integer priority;

    public Integer rewardCounts;

    public Integer rewardVipDays;

    public Float discount;

    public Builder() {
    }

    /**
     * 商品ID;
     */
    public Builder sku(String sku) {
      this.sku = sku;
      return this;
    }

    /**
     * 商品类型, inapp:应用内商品，可管理的; subs:订阅类商品;
     */
    public Builder type(String type) {
      this.type = type;
      return this;
    }

    /**
     * 商品展示位：1：钻石市场;2:vip订阅;3:首充奖励商品
     */
    public Builder placement(Integer placement) {
      this.placement = placement;
      return this;
    }

    /**
     * 商品状态, true:上架; false:下架;（控制商品显示）下架的商品不再向用户展示，但必须下发，防止用户之前购买下架商品但由于不可避免的原因未给用户提供对应的服务(如加金币)。
     */
    public Builder isActive(Boolean isActive) {
      this.isActive = isActive;
      return this;
    }

    /**
     * 可购买的钻石/金币数
     */
    public Builder months(Integer months) {
      this.months = months;
      return this;
    }

    /**
     * 可购买的钻石/金币数
     */
    public Builder counts(Integer counts) {
      this.counts = counts;
      return this;
    }

    /**
     * 商品优先级，0为最低优先级，用于商品排序
     */
    public Builder priority(Integer priority) {
      this.priority = priority;
      return this;
    }

    /**
     * 购买该商品奖励的金币数
     */
    public Builder rewardCounts(Integer rewardCounts) {
      this.rewardCounts = rewardCounts;
      return this;
    }

    /**
     * 首充奖励奖励的vip天数；
     */
    public Builder rewardVipDays(Integer rewardVipDays) {
      this.rewardVipDays = rewardVipDays;
      return this;
    }

    /**
     * 商品折扣;如20%的折扣(0.2)
     */
    public Builder discount(Float discount) {
      this.discount = discount;
      return this;
    }

    @Override
    public IabSku build() {
      if (sku == null
          || type == null
          || placement == null) {
        throw Internal.missingRequiredFields(sku, "sku",
            type, "type",
            placement, "placement");
      }
      return new IabSku(sku, type, placement, isActive, months, counts, priority, rewardCounts, rewardVipDays, discount, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_IabSku extends ProtoAdapter<IabSku> {
    ProtoAdapter_IabSku() {
      super(FieldEncoding.LENGTH_DELIMITED, IabSku.class);
    }

    @Override
    public int encodedSize(IabSku value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.sku)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.type)
          + ProtoAdapter.INT32.encodedSizeWithTag(3, value.placement)
          + (value.isActive != null ? ProtoAdapter.BOOL.encodedSizeWithTag(4, value.isActive) : 0)
          + (value.months != null ? ProtoAdapter.INT32.encodedSizeWithTag(5, value.months) : 0)
          + (value.counts != null ? ProtoAdapter.INT32.encodedSizeWithTag(6, value.counts) : 0)
          + (value.priority != null ? ProtoAdapter.INT32.encodedSizeWithTag(7, value.priority) : 0)
          + (value.rewardCounts != null ? ProtoAdapter.INT32.encodedSizeWithTag(8, value.rewardCounts) : 0)
          + (value.rewardVipDays != null ? ProtoAdapter.INT32.encodedSizeWithTag(9, value.rewardVipDays) : 0)
          + (value.discount != null ? ProtoAdapter.FLOAT.encodedSizeWithTag(10, value.discount) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, IabSku value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.sku);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.type);
      ProtoAdapter.INT32.encodeWithTag(writer, 3, value.placement);
      if (value.isActive != null) ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.isActive);
      if (value.months != null) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.months);
      if (value.counts != null) ProtoAdapter.INT32.encodeWithTag(writer, 6, value.counts);
      if (value.priority != null) ProtoAdapter.INT32.encodeWithTag(writer, 7, value.priority);
      if (value.rewardCounts != null) ProtoAdapter.INT32.encodeWithTag(writer, 8, value.rewardCounts);
      if (value.rewardVipDays != null) ProtoAdapter.INT32.encodeWithTag(writer, 9, value.rewardVipDays);
      if (value.discount != null) ProtoAdapter.FLOAT.encodeWithTag(writer, 10, value.discount);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public IabSku decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.sku(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.type(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.placement(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.isActive(ProtoAdapter.BOOL.decode(reader)); break;
          case 5: builder.months(ProtoAdapter.INT32.decode(reader)); break;
          case 6: builder.counts(ProtoAdapter.INT32.decode(reader)); break;
          case 7: builder.priority(ProtoAdapter.INT32.decode(reader)); break;
          case 8: builder.rewardCounts(ProtoAdapter.INT32.decode(reader)); break;
          case 9: builder.rewardVipDays(ProtoAdapter.INT32.decode(reader)); break;
          case 10: builder.discount(ProtoAdapter.FLOAT.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public IabSku redact(IabSku value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
