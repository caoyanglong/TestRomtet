// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 97:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ReceivedGift extends Message<ReceivedGift, ReceivedGift.Builder> {
  public static final ProtoAdapter<ReceivedGift> ADAPTER = new ProtoAdapter_ReceivedGift();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final Integer DEFAULT_COUNT = 0;

  /**
   * 礼物编号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String id;

  /**
   * 礼物个数
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer count;

  public ReceivedGift(String id, Integer count) {
    this(id, count, ByteString.EMPTY);
  }

  public ReceivedGift(String id, Integer count, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.count = count;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.count = count;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ReceivedGift)) return false;
    ReceivedGift o = (ReceivedGift) other;
    return unknownFields().equals(o.unknownFields())
        && id.equals(o.id)
        && Internal.equals(count, o.count);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + id.hashCode();
      result = result * 37 + (count != null ? count.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", id=").append(id);
    if (count != null) builder.append(", count=").append(count);
    return builder.replace(0, 2, "ReceivedGift{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ReceivedGift, Builder> {
    public String id;

    public Integer count;

    public Builder() {
    }

    /**
     * 礼物编号
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * 礼物个数
     */
    public Builder count(Integer count) {
      this.count = count;
      return this;
    }

    @Override
    public ReceivedGift build() {
      if (id == null) {
        throw Internal.missingRequiredFields(id, "id");
      }
      return new ReceivedGift(id, count, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ReceivedGift extends ProtoAdapter<ReceivedGift> {
    ProtoAdapter_ReceivedGift() {
      super(FieldEncoding.LENGTH_DELIMITED, ReceivedGift.class);
    }

    @Override
    public int encodedSize(ReceivedGift value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.id)
          + (value.count != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.count) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ReceivedGift value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      if (value.count != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.count);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ReceivedGift decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.count(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ReceivedGift redact(ReceivedGift value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
