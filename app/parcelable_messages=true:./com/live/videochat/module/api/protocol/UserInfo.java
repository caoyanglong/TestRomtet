// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 70:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * ======================================================================================
 * 2.基础信息
 * ======================================================================================
 * 用户信息 用于校验用户登陆状态
 */
public final class UserInfo extends Message<UserInfo, UserInfo.Builder> {
  public static final ProtoAdapter<UserInfo> ADAPTER = new ProtoAdapter_UserInfo();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_JID = "";

  public static final String DEFAULT_VCTOKEN = "";

  public static final Integer DEFAULT_ROLE = 0;

  /**
   * 用户jid;
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String jid;

  /**
   * 登陆后由服务端返回;
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String vcToken;

  /**
   * 角色,1：主播，2：登录用户，3：游客。
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer role;

  public UserInfo(String jid, String vcToken, Integer role) {
    this(jid, vcToken, role, ByteString.EMPTY);
  }

  public UserInfo(String jid, String vcToken, Integer role, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.jid = jid;
    this.vcToken = vcToken;
    this.role = role;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.jid = jid;
    builder.vcToken = vcToken;
    builder.role = role;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserInfo)) return false;
    UserInfo o = (UserInfo) other;
    return unknownFields().equals(o.unknownFields())
        && jid.equals(o.jid)
        && vcToken.equals(o.vcToken)
        && role.equals(o.role);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + jid.hashCode();
      result = result * 37 + vcToken.hashCode();
      result = result * 37 + role.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", jid=").append(jid);
    builder.append(", vcToken=").append(vcToken);
    builder.append(", role=").append(role);
    return builder.replace(0, 2, "UserInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserInfo, Builder> {
    public String jid;

    public String vcToken;

    public Integer role;

    public Builder() {
    }

    /**
     * 用户jid;
     */
    public Builder jid(String jid) {
      this.jid = jid;
      return this;
    }

    /**
     * 登陆后由服务端返回;
     */
    public Builder vcToken(String vcToken) {
      this.vcToken = vcToken;
      return this;
    }

    /**
     * 角色,1：主播，2：登录用户，3：游客。
     */
    public Builder role(Integer role) {
      this.role = role;
      return this;
    }

    @Override
    public UserInfo build() {
      if (jid == null
          || vcToken == null
          || role == null) {
        throw Internal.missingRequiredFields(jid, "jid",
            vcToken, "vcToken",
            role, "role");
      }
      return new UserInfo(jid, vcToken, role, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserInfo extends ProtoAdapter<UserInfo> {
    ProtoAdapter_UserInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, UserInfo.class);
    }

    @Override
    public int encodedSize(UserInfo value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.jid)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.vcToken)
          + ProtoAdapter.INT32.encodedSizeWithTag(3, value.role)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserInfo value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.jid);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.vcToken);
      ProtoAdapter.INT32.encodeWithTag(writer, 3, value.role);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.jid(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.vcToken(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.role(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserInfo redact(UserInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
