// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 12:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * ======================================================================================
 * 1.用户信息
 * ======================================================================================
 * 用户身份信息
 */
public final class ClientInfo extends Message<ClientInfo, ClientInfo.Builder> {
  public static final ProtoAdapter<ClientInfo> ADAPTER = new ProtoAdapter_ClientInfo();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_PKGNAME = "";

  public static final String DEFAULT_VERSIONNAME = "";

  public static final Integer DEFAULT_VERSIONCODE = 0;

  public static final String DEFAULT_CHANNEL = "";

  public static final String DEFAULT_SIGNATUREMD5 = "";

  public static final String DEFAULT_INSTALLERPACKAGENAME = "";

  public static final Integer DEFAULT_USERGROUPID = 0;

  public static final String DEFAULT_CHANNELNETWORK = "";

  public static final String DEFAULT_CHANNELCAMPAIGN = "";

  public static final String DEFAULT_CHANNELADGROUP = "";

  /**
   * 本体包名：com.lbe.security.xxxx
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String pkgName;

  /**
   * 本体版本：1.0.1749
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String versionName;

  /**
   * 本体版本：1749
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer versionCode;

  /**
   * 本体渠道：A1、A2、A3……
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String channel;

  /**
   * 本体签名证书MD5
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String signatureMD5;

  /**
   * 安装者包名
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String installerPackageName;

  /**
   * 用户组
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer userGroupId;

  /**
   * "Facebook"
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelNetwork;

  /**
   * 用户来源，第二纬度：广告系列
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelCampaign;

  /**
   * 用户来源，第三纬度：广告分组
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelAdGroup;

  public ClientInfo(String pkgName, String versionName, Integer versionCode, String channel, String signatureMD5, String installerPackageName, Integer userGroupId, String channelNetwork, String channelCampaign, String channelAdGroup) {
    this(pkgName, versionName, versionCode, channel, signatureMD5, installerPackageName, userGroupId, channelNetwork, channelCampaign, channelAdGroup, ByteString.EMPTY);
  }

  public ClientInfo(String pkgName, String versionName, Integer versionCode, String channel, String signatureMD5, String installerPackageName, Integer userGroupId, String channelNetwork, String channelCampaign, String channelAdGroup, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.pkgName = pkgName;
    this.versionName = versionName;
    this.versionCode = versionCode;
    this.channel = channel;
    this.signatureMD5 = signatureMD5;
    this.installerPackageName = installerPackageName;
    this.userGroupId = userGroupId;
    this.channelNetwork = channelNetwork;
    this.channelCampaign = channelCampaign;
    this.channelAdGroup = channelAdGroup;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.pkgName = pkgName;
    builder.versionName = versionName;
    builder.versionCode = versionCode;
    builder.channel = channel;
    builder.signatureMD5 = signatureMD5;
    builder.installerPackageName = installerPackageName;
    builder.userGroupId = userGroupId;
    builder.channelNetwork = channelNetwork;
    builder.channelCampaign = channelCampaign;
    builder.channelAdGroup = channelAdGroup;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ClientInfo)) return false;
    ClientInfo o = (ClientInfo) other;
    return unknownFields().equals(o.unknownFields())
        && pkgName.equals(o.pkgName)
        && versionName.equals(o.versionName)
        && versionCode.equals(o.versionCode)
        && channel.equals(o.channel)
        && signatureMD5.equals(o.signatureMD5)
        && Internal.equals(installerPackageName, o.installerPackageName)
        && Internal.equals(userGroupId, o.userGroupId)
        && Internal.equals(channelNetwork, o.channelNetwork)
        && Internal.equals(channelCampaign, o.channelCampaign)
        && Internal.equals(channelAdGroup, o.channelAdGroup);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + pkgName.hashCode();
      result = result * 37 + versionName.hashCode();
      result = result * 37 + versionCode.hashCode();
      result = result * 37 + channel.hashCode();
      result = result * 37 + signatureMD5.hashCode();
      result = result * 37 + (installerPackageName != null ? installerPackageName.hashCode() : 0);
      result = result * 37 + (userGroupId != null ? userGroupId.hashCode() : 0);
      result = result * 37 + (channelNetwork != null ? channelNetwork.hashCode() : 0);
      result = result * 37 + (channelCampaign != null ? channelCampaign.hashCode() : 0);
      result = result * 37 + (channelAdGroup != null ? channelAdGroup.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", pkgName=").append(pkgName);
    builder.append(", versionName=").append(versionName);
    builder.append(", versionCode=").append(versionCode);
    builder.append(", channel=").append(channel);
    builder.append(", signatureMD5=").append(signatureMD5);
    if (installerPackageName != null) builder.append(", installerPackageName=").append(installerPackageName);
    if (userGroupId != null) builder.append(", userGroupId=").append(userGroupId);
    if (channelNetwork != null) builder.append(", channelNetwork=").append(channelNetwork);
    if (channelCampaign != null) builder.append(", channelCampaign=").append(channelCampaign);
    if (channelAdGroup != null) builder.append(", channelAdGroup=").append(channelAdGroup);
    return builder.replace(0, 2, "ClientInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ClientInfo, Builder> {
    public String pkgName;

    public String versionName;

    public Integer versionCode;

    public String channel;

    public String signatureMD5;

    public String installerPackageName;

    public Integer userGroupId;

    public String channelNetwork;

    public String channelCampaign;

    public String channelAdGroup;

    public Builder() {
    }

    /**
     * 本体包名：com.lbe.security.xxxx
     */
    public Builder pkgName(String pkgName) {
      this.pkgName = pkgName;
      return this;
    }

    /**
     * 本体版本：1.0.1749
     */
    public Builder versionName(String versionName) {
      this.versionName = versionName;
      return this;
    }

    /**
     * 本体版本：1749
     */
    public Builder versionCode(Integer versionCode) {
      this.versionCode = versionCode;
      return this;
    }

    /**
     * 本体渠道：A1、A2、A3……
     */
    public Builder channel(String channel) {
      this.channel = channel;
      return this;
    }

    /**
     * 本体签名证书MD5
     */
    public Builder signatureMD5(String signatureMD5) {
      this.signatureMD5 = signatureMD5;
      return this;
    }

    /**
     * 安装者包名
     */
    public Builder installerPackageName(String installerPackageName) {
      this.installerPackageName = installerPackageName;
      return this;
    }

    /**
     * 用户组
     */
    public Builder userGroupId(Integer userGroupId) {
      this.userGroupId = userGroupId;
      return this;
    }

    /**
     * "Facebook"
     */
    public Builder channelNetwork(String channelNetwork) {
      this.channelNetwork = channelNetwork;
      return this;
    }

    /**
     * 用户来源，第二纬度：广告系列
     */
    public Builder channelCampaign(String channelCampaign) {
      this.channelCampaign = channelCampaign;
      return this;
    }

    /**
     * 用户来源，第三纬度：广告分组
     */
    public Builder channelAdGroup(String channelAdGroup) {
      this.channelAdGroup = channelAdGroup;
      return this;
    }

    @Override
    public ClientInfo build() {
      if (pkgName == null
          || versionName == null
          || versionCode == null
          || channel == null
          || signatureMD5 == null) {
        throw Internal.missingRequiredFields(pkgName, "pkgName",
            versionName, "versionName",
            versionCode, "versionCode",
            channel, "channel",
            signatureMD5, "signatureMD5");
      }
      return new ClientInfo(pkgName, versionName, versionCode, channel, signatureMD5, installerPackageName, userGroupId, channelNetwork, channelCampaign, channelAdGroup, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ClientInfo extends ProtoAdapter<ClientInfo> {
    ProtoAdapter_ClientInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, ClientInfo.class);
    }

    @Override
    public int encodedSize(ClientInfo value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.pkgName)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.versionName)
          + ProtoAdapter.INT32.encodedSizeWithTag(3, value.versionCode)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.channel)
          + ProtoAdapter.STRING.encodedSizeWithTag(5, value.signatureMD5)
          + (value.installerPackageName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.installerPackageName) : 0)
          + (value.userGroupId != null ? ProtoAdapter.INT32.encodedSizeWithTag(7, value.userGroupId) : 0)
          + (value.channelNetwork != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.channelNetwork) : 0)
          + (value.channelCampaign != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.channelCampaign) : 0)
          + (value.channelAdGroup != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.channelAdGroup) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ClientInfo value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.pkgName);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.versionName);
      ProtoAdapter.INT32.encodeWithTag(writer, 3, value.versionCode);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.channel);
      ProtoAdapter.STRING.encodeWithTag(writer, 5, value.signatureMD5);
      if (value.installerPackageName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.installerPackageName);
      if (value.userGroupId != null) ProtoAdapter.INT32.encodeWithTag(writer, 7, value.userGroupId);
      if (value.channelNetwork != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.channelNetwork);
      if (value.channelCampaign != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.channelCampaign);
      if (value.channelAdGroup != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.channelAdGroup);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ClientInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.pkgName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.versionName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.versionCode(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.channel(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.signatureMD5(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.installerPackageName(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.userGroupId(ProtoAdapter.INT32.decode(reader)); break;
          case 8: builder.channelNetwork(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.channelCampaign(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.channelAdGroup(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ClientInfo redact(ClientInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
