// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 306:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 账户明细(计算频繁，只有当请求时返回)
 */
public final class AccountDetails extends Message<AccountDetails, AccountDetails.Builder> {
  public static final ProtoAdapter<AccountDetails> ADAPTER = new ProtoAdapter_AccountDetails();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_TOTALINCOMES = 0L;

  public static final Integer DEFAULT_MONTHLYINCOMES = 0;

  public static final Integer DEFAULT_WEEKLYINCOMES = 0;

  public static final Integer DEFAULT_DAILYINCOMES = 0;

  public static final Integer DEFAULT_TOTALTIMES = 0;

  public static final Integer DEFAULT_MONTHLYTIMES = 0;

  public static final Integer DEFAULT_WEEKLYTIMES = 0;

  public static final Integer DEFAULT_DAILYTIMES = 0;

  /**
   * 总收入（单位：金币数）
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long totalIncomes;

  /**
   * 月收入（单位：金币数）
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer monthlyIncomes;

  /**
   * 周收入（单位：金币数）
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer weeklyIncomes;

  /**
   * 日收入（单位：金币数）
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer dailyIncomes;

  /**
   * 总视频聊天时长（单位：分钟）
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer totalTimes;

  /**
   * 月视频聊天时长（单位：分钟）
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer monthlyTimes;

  /**
   * 周视频聊天时长（单位：分钟）
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer weeklyTimes;

  /**
   * 日视频聊天时长（单位：分钟）
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer dailyTimes;

  public AccountDetails(Long totalIncomes, Integer monthlyIncomes, Integer weeklyIncomes, Integer dailyIncomes, Integer totalTimes, Integer monthlyTimes, Integer weeklyTimes, Integer dailyTimes) {
    this(totalIncomes, monthlyIncomes, weeklyIncomes, dailyIncomes, totalTimes, monthlyTimes, weeklyTimes, dailyTimes, ByteString.EMPTY);
  }

  public AccountDetails(Long totalIncomes, Integer monthlyIncomes, Integer weeklyIncomes, Integer dailyIncomes, Integer totalTimes, Integer monthlyTimes, Integer weeklyTimes, Integer dailyTimes, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.totalIncomes = totalIncomes;
    this.monthlyIncomes = monthlyIncomes;
    this.weeklyIncomes = weeklyIncomes;
    this.dailyIncomes = dailyIncomes;
    this.totalTimes = totalTimes;
    this.monthlyTimes = monthlyTimes;
    this.weeklyTimes = weeklyTimes;
    this.dailyTimes = dailyTimes;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.totalIncomes = totalIncomes;
    builder.monthlyIncomes = monthlyIncomes;
    builder.weeklyIncomes = weeklyIncomes;
    builder.dailyIncomes = dailyIncomes;
    builder.totalTimes = totalTimes;
    builder.monthlyTimes = monthlyTimes;
    builder.weeklyTimes = weeklyTimes;
    builder.dailyTimes = dailyTimes;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AccountDetails)) return false;
    AccountDetails o = (AccountDetails) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(totalIncomes, o.totalIncomes)
        && Internal.equals(monthlyIncomes, o.monthlyIncomes)
        && Internal.equals(weeklyIncomes, o.weeklyIncomes)
        && Internal.equals(dailyIncomes, o.dailyIncomes)
        && Internal.equals(totalTimes, o.totalTimes)
        && Internal.equals(monthlyTimes, o.monthlyTimes)
        && Internal.equals(weeklyTimes, o.weeklyTimes)
        && Internal.equals(dailyTimes, o.dailyTimes);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (totalIncomes != null ? totalIncomes.hashCode() : 0);
      result = result * 37 + (monthlyIncomes != null ? monthlyIncomes.hashCode() : 0);
      result = result * 37 + (weeklyIncomes != null ? weeklyIncomes.hashCode() : 0);
      result = result * 37 + (dailyIncomes != null ? dailyIncomes.hashCode() : 0);
      result = result * 37 + (totalTimes != null ? totalTimes.hashCode() : 0);
      result = result * 37 + (monthlyTimes != null ? monthlyTimes.hashCode() : 0);
      result = result * 37 + (weeklyTimes != null ? weeklyTimes.hashCode() : 0);
      result = result * 37 + (dailyTimes != null ? dailyTimes.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (totalIncomes != null) builder.append(", totalIncomes=").append(totalIncomes);
    if (monthlyIncomes != null) builder.append(", monthlyIncomes=").append(monthlyIncomes);
    if (weeklyIncomes != null) builder.append(", weeklyIncomes=").append(weeklyIncomes);
    if (dailyIncomes != null) builder.append(", dailyIncomes=").append(dailyIncomes);
    if (totalTimes != null) builder.append(", totalTimes=").append(totalTimes);
    if (monthlyTimes != null) builder.append(", monthlyTimes=").append(monthlyTimes);
    if (weeklyTimes != null) builder.append(", weeklyTimes=").append(weeklyTimes);
    if (dailyTimes != null) builder.append(", dailyTimes=").append(dailyTimes);
    return builder.replace(0, 2, "AccountDetails{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AccountDetails, Builder> {
    public Long totalIncomes;

    public Integer monthlyIncomes;

    public Integer weeklyIncomes;

    public Integer dailyIncomes;

    public Integer totalTimes;

    public Integer monthlyTimes;

    public Integer weeklyTimes;

    public Integer dailyTimes;

    public Builder() {
    }

    /**
     * 总收入（单位：金币数）
     */
    public Builder totalIncomes(Long totalIncomes) {
      this.totalIncomes = totalIncomes;
      return this;
    }

    /**
     * 月收入（单位：金币数）
     */
    public Builder monthlyIncomes(Integer monthlyIncomes) {
      this.monthlyIncomes = monthlyIncomes;
      return this;
    }

    /**
     * 周收入（单位：金币数）
     */
    public Builder weeklyIncomes(Integer weeklyIncomes) {
      this.weeklyIncomes = weeklyIncomes;
      return this;
    }

    /**
     * 日收入（单位：金币数）
     */
    public Builder dailyIncomes(Integer dailyIncomes) {
      this.dailyIncomes = dailyIncomes;
      return this;
    }

    /**
     * 总视频聊天时长（单位：分钟）
     */
    public Builder totalTimes(Integer totalTimes) {
      this.totalTimes = totalTimes;
      return this;
    }

    /**
     * 月视频聊天时长（单位：分钟）
     */
    public Builder monthlyTimes(Integer monthlyTimes) {
      this.monthlyTimes = monthlyTimes;
      return this;
    }

    /**
     * 周视频聊天时长（单位：分钟）
     */
    public Builder weeklyTimes(Integer weeklyTimes) {
      this.weeklyTimes = weeklyTimes;
      return this;
    }

    /**
     * 日视频聊天时长（单位：分钟）
     */
    public Builder dailyTimes(Integer dailyTimes) {
      this.dailyTimes = dailyTimes;
      return this;
    }

    @Override
    public AccountDetails build() {
      return new AccountDetails(totalIncomes, monthlyIncomes, weeklyIncomes, dailyIncomes, totalTimes, monthlyTimes, weeklyTimes, dailyTimes, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AccountDetails extends ProtoAdapter<AccountDetails> {
    ProtoAdapter_AccountDetails() {
      super(FieldEncoding.LENGTH_DELIMITED, AccountDetails.class);
    }

    @Override
    public int encodedSize(AccountDetails value) {
      return (value.totalIncomes != null ? ProtoAdapter.INT64.encodedSizeWithTag(1, value.totalIncomes) : 0)
          + (value.monthlyIncomes != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.monthlyIncomes) : 0)
          + (value.weeklyIncomes != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.weeklyIncomes) : 0)
          + (value.dailyIncomes != null ? ProtoAdapter.INT32.encodedSizeWithTag(4, value.dailyIncomes) : 0)
          + (value.totalTimes != null ? ProtoAdapter.INT32.encodedSizeWithTag(5, value.totalTimes) : 0)
          + (value.monthlyTimes != null ? ProtoAdapter.INT32.encodedSizeWithTag(6, value.monthlyTimes) : 0)
          + (value.weeklyTimes != null ? ProtoAdapter.INT32.encodedSizeWithTag(7, value.weeklyTimes) : 0)
          + (value.dailyTimes != null ? ProtoAdapter.INT32.encodedSizeWithTag(8, value.dailyTimes) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AccountDetails value) throws IOException {
      if (value.totalIncomes != null) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.totalIncomes);
      if (value.monthlyIncomes != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.monthlyIncomes);
      if (value.weeklyIncomes != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.weeklyIncomes);
      if (value.dailyIncomes != null) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.dailyIncomes);
      if (value.totalTimes != null) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.totalTimes);
      if (value.monthlyTimes != null) ProtoAdapter.INT32.encodeWithTag(writer, 6, value.monthlyTimes);
      if (value.weeklyTimes != null) ProtoAdapter.INT32.encodeWithTag(writer, 7, value.weeklyTimes);
      if (value.dailyTimes != null) ProtoAdapter.INT32.encodeWithTag(writer, 8, value.dailyTimes);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AccountDetails decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.totalIncomes(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.monthlyIncomes(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.weeklyIncomes(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.dailyIncomes(ProtoAdapter.INT32.decode(reader)); break;
          case 5: builder.totalTimes(ProtoAdapter.INT32.decode(reader)); break;
          case 6: builder.monthlyTimes(ProtoAdapter.INT32.decode(reader)); break;
          case 7: builder.weeklyTimes(ProtoAdapter.INT32.decode(reader)); break;
          case 8: builder.dailyTimes(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AccountDetails redact(AccountDetails value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
