// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: protobuf.proto at 31:1
package com.giousa.protobufdemo.model;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class AddressBook extends Message<AddressBook, AddressBook.Builder> {
  public static final ProtoAdapter<AddressBook> ADAPTER = new ProtoAdapter_AddressBook();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.giousa.protobufdemo.model.Person#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Person> person;

  public AddressBook(List<Person> person) {
    this(person, ByteString.EMPTY);
  }

  public AddressBook(List<Person> person, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.person = Internal.immutableCopyOf("person", person);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.person = Internal.copyOf("person", person);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AddressBook)) return false;
    AddressBook o = (AddressBook) other;
    return unknownFields().equals(o.unknownFields())
        && person.equals(o.person);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + person.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!person.isEmpty()) builder.append(", person=").append(person);
    return builder.replace(0, 2, "AddressBook{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AddressBook, Builder> {
    public List<Person> person;

    public Builder() {
      person = Internal.newMutableList();
    }

    public Builder person(List<Person> person) {
      Internal.checkElementsNotNull(person);
      this.person = person;
      return this;
    }

    @Override
    public AddressBook build() {
      return new AddressBook(person, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AddressBook extends ProtoAdapter<AddressBook> {
    ProtoAdapter_AddressBook() {
      super(FieldEncoding.LENGTH_DELIMITED, AddressBook.class);
    }

    @Override
    public int encodedSize(AddressBook value) {
      return Person.ADAPTER.asRepeated().encodedSizeWithTag(1, value.person)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AddressBook value) throws IOException {
      Person.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.person);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AddressBook decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.person.add(Person.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AddressBook redact(AddressBook value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.person, Person.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
