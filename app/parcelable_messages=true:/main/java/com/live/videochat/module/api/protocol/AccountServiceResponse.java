// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 299:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 响应
 */
public final class AccountServiceResponse extends Message<AccountServiceResponse, AccountServiceResponse.Builder> {
  public static final ProtoAdapter<AccountServiceResponse> ADAPTER = new ProtoAdapter_AccountServiceResponse();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_STATUS = 0;

  /**
   * 返回状态:1：成功;-1：错误;
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer status;

  /**
   * 账户信息（必定返回）
   */
  @WireField(
      tag = 2,
      adapter = "com.live.videochat.module.api.protocol.AccountInfo#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<AccountInfo> accountInfo;

  /**
   * 账户明细（日/周/月收入明细）；
   */
  @WireField(
      tag = 3,
      adapter = "com.live.videochat.module.api.protocol.AccountDetails#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<AccountDetails> accountDetails;

  public AccountServiceResponse(Integer status, List<AccountInfo> accountInfo, List<AccountDetails> accountDetails) {
    this(status, accountInfo, accountDetails, ByteString.EMPTY);
  }

  public AccountServiceResponse(Integer status, List<AccountInfo> accountInfo, List<AccountDetails> accountDetails, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.status = status;
    this.accountInfo = Internal.immutableCopyOf("accountInfo", accountInfo);
    this.accountDetails = Internal.immutableCopyOf("accountDetails", accountDetails);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.status = status;
    builder.accountInfo = Internal.copyOf("accountInfo", accountInfo);
    builder.accountDetails = Internal.copyOf("accountDetails", accountDetails);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AccountServiceResponse)) return false;
    AccountServiceResponse o = (AccountServiceResponse) other;
    return unknownFields().equals(o.unknownFields())
        && status.equals(o.status)
        && accountInfo.equals(o.accountInfo)
        && accountDetails.equals(o.accountDetails);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + status.hashCode();
      result = result * 37 + accountInfo.hashCode();
      result = result * 37 + accountDetails.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", status=").append(status);
    if (!accountInfo.isEmpty()) builder.append(", accountInfo=").append(accountInfo);
    if (!accountDetails.isEmpty()) builder.append(", accountDetails=").append(accountDetails);
    return builder.replace(0, 2, "AccountServiceResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AccountServiceResponse, Builder> {
    public Integer status;

    public List<AccountInfo> accountInfo;

    public List<AccountDetails> accountDetails;

    public Builder() {
      accountInfo = Internal.newMutableList();
      accountDetails = Internal.newMutableList();
    }

    /**
     * 返回状态:1：成功;-1：错误;
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 账户信息（必定返回）
     */
    public Builder accountInfo(List<AccountInfo> accountInfo) {
      Internal.checkElementsNotNull(accountInfo);
      this.accountInfo = accountInfo;
      return this;
    }

    /**
     * 账户明细（日/周/月收入明细）；
     */
    public Builder accountDetails(List<AccountDetails> accountDetails) {
      Internal.checkElementsNotNull(accountDetails);
      this.accountDetails = accountDetails;
      return this;
    }

    @Override
    public AccountServiceResponse build() {
      if (status == null) {
        throw Internal.missingRequiredFields(status, "status");
      }
      return new AccountServiceResponse(status, accountInfo, accountDetails, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AccountServiceResponse extends ProtoAdapter<AccountServiceResponse> {
    ProtoAdapter_AccountServiceResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, AccountServiceResponse.class);
    }

    @Override
    public int encodedSize(AccountServiceResponse value) {
      return ProtoAdapter.INT32.encodedSizeWithTag(1, value.status)
          + AccountInfo.ADAPTER.asRepeated().encodedSizeWithTag(2, value.accountInfo)
          + AccountDetails.ADAPTER.asRepeated().encodedSizeWithTag(3, value.accountDetails)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AccountServiceResponse value) throws IOException {
      ProtoAdapter.INT32.encodeWithTag(writer, 1, value.status);
      AccountInfo.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.accountInfo);
      AccountDetails.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.accountDetails);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AccountServiceResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.status(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.accountInfo.add(AccountInfo.ADAPTER.decode(reader)); break;
          case 3: builder.accountDetails.add(AccountDetails.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AccountServiceResponse redact(AccountServiceResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.accountInfo, AccountInfo.ADAPTER);
      Internal.redactElements(builder.accountDetails, AccountDetails.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
