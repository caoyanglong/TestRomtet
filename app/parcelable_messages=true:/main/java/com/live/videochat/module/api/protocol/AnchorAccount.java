// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 91:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class AnchorAccount extends Message<AnchorAccount, AnchorAccount.Builder> {
  public static final ProtoAdapter<AnchorAccount> ADAPTER = new ProtoAdapter_AnchorAccount();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_CHARMS = 0L;

  public static final Integer DEFAULT_VIDEOCHATPRICE = 0;

  /**
   * 主播魅力值
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long charms;

  /**
   * 主播视频聊天价格(单位：每分钟金币数)
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer videoChatPrice;

  /**
   * 主播收到的礼物列表
   */
  @WireField(
      tag = 3,
      adapter = "com.live.videochat.module.api.protocol.ReceivedGift#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<ReceivedGift> receivedGifts;

  public AnchorAccount(Long charms, Integer videoChatPrice, List<ReceivedGift> receivedGifts) {
    this(charms, videoChatPrice, receivedGifts, ByteString.EMPTY);
  }

  public AnchorAccount(Long charms, Integer videoChatPrice, List<ReceivedGift> receivedGifts, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.charms = charms;
    this.videoChatPrice = videoChatPrice;
    this.receivedGifts = Internal.immutableCopyOf("receivedGifts", receivedGifts);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.charms = charms;
    builder.videoChatPrice = videoChatPrice;
    builder.receivedGifts = Internal.copyOf("receivedGifts", receivedGifts);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AnchorAccount)) return false;
    AnchorAccount o = (AnchorAccount) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(charms, o.charms)
        && Internal.equals(videoChatPrice, o.videoChatPrice)
        && receivedGifts.equals(o.receivedGifts);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (charms != null ? charms.hashCode() : 0);
      result = result * 37 + (videoChatPrice != null ? videoChatPrice.hashCode() : 0);
      result = result * 37 + receivedGifts.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (charms != null) builder.append(", charms=").append(charms);
    if (videoChatPrice != null) builder.append(", videoChatPrice=").append(videoChatPrice);
    if (!receivedGifts.isEmpty()) builder.append(", receivedGifts=").append(receivedGifts);
    return builder.replace(0, 2, "AnchorAccount{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AnchorAccount, Builder> {
    public Long charms;

    public Integer videoChatPrice;

    public List<ReceivedGift> receivedGifts;

    public Builder() {
      receivedGifts = Internal.newMutableList();
    }

    /**
     * 主播魅力值
     */
    public Builder charms(Long charms) {
      this.charms = charms;
      return this;
    }

    /**
     * 主播视频聊天价格(单位：每分钟金币数)
     */
    public Builder videoChatPrice(Integer videoChatPrice) {
      this.videoChatPrice = videoChatPrice;
      return this;
    }

    /**
     * 主播收到的礼物列表
     */
    public Builder receivedGifts(List<ReceivedGift> receivedGifts) {
      Internal.checkElementsNotNull(receivedGifts);
      this.receivedGifts = receivedGifts;
      return this;
    }

    @Override
    public AnchorAccount build() {
      return new AnchorAccount(charms, videoChatPrice, receivedGifts, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AnchorAccount extends ProtoAdapter<AnchorAccount> {
    ProtoAdapter_AnchorAccount() {
      super(FieldEncoding.LENGTH_DELIMITED, AnchorAccount.class);
    }

    @Override
    public int encodedSize(AnchorAccount value) {
      return (value.charms != null ? ProtoAdapter.INT64.encodedSizeWithTag(1, value.charms) : 0)
          + (value.videoChatPrice != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.videoChatPrice) : 0)
          + ReceivedGift.ADAPTER.asRepeated().encodedSizeWithTag(3, value.receivedGifts)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AnchorAccount value) throws IOException {
      if (value.charms != null) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.charms);
      if (value.videoChatPrice != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.videoChatPrice);
      ReceivedGift.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.receivedGifts);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AnchorAccount decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.charms(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.videoChatPrice(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.receivedGifts.add(ReceivedGift.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AnchorAccount redact(AnchorAccount value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.receivedGifts, ReceivedGift.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
