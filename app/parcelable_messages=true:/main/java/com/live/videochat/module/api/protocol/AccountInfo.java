// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: VCProto.proto at 77:1
package com.live.videochat.module.api.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 账户信息
 */
public final class AccountInfo extends Message<AccountInfo, AccountInfo.Builder> {
  public static final ProtoAdapter<AccountInfo> ADAPTER = new ProtoAdapter_AccountInfo();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_JID = "";

  /**
   * 该账户信息对应的jid
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String jid;

  /**
   * 普通用户账户
   */
  @WireField(
      tag = 2,
      adapter = "com.live.videochat.module.api.protocol.UserAccount#ADAPTER"
  )
  public final UserAccount userAccount;

  /**
   * 主播账户
   */
  @WireField(
      tag = 3,
      adapter = "com.live.videochat.module.api.protocol.AnchorAccount#ADAPTER"
  )
  public final AnchorAccount anchorAccount;

  public AccountInfo(String jid, UserAccount userAccount, AnchorAccount anchorAccount) {
    this(jid, userAccount, anchorAccount, ByteString.EMPTY);
  }

  public AccountInfo(String jid, UserAccount userAccount, AnchorAccount anchorAccount, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.jid = jid;
    this.userAccount = userAccount;
    this.anchorAccount = anchorAccount;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.jid = jid;
    builder.userAccount = userAccount;
    builder.anchorAccount = anchorAccount;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AccountInfo)) return false;
    AccountInfo o = (AccountInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(jid, o.jid)
        && Internal.equals(userAccount, o.userAccount)
        && Internal.equals(anchorAccount, o.anchorAccount);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (jid != null ? jid.hashCode() : 0);
      result = result * 37 + (userAccount != null ? userAccount.hashCode() : 0);
      result = result * 37 + (anchorAccount != null ? anchorAccount.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (jid != null) builder.append(", jid=").append(jid);
    if (userAccount != null) builder.append(", userAccount=").append(userAccount);
    if (anchorAccount != null) builder.append(", anchorAccount=").append(anchorAccount);
    return builder.replace(0, 2, "AccountInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AccountInfo, Builder> {
    public String jid;

    public UserAccount userAccount;

    public AnchorAccount anchorAccount;

    public Builder() {
    }

    /**
     * 该账户信息对应的jid
     */
    public Builder jid(String jid) {
      this.jid = jid;
      return this;
    }

    /**
     * 普通用户账户
     */
    public Builder userAccount(UserAccount userAccount) {
      this.userAccount = userAccount;
      return this;
    }

    /**
     * 主播账户
     */
    public Builder anchorAccount(AnchorAccount anchorAccount) {
      this.anchorAccount = anchorAccount;
      return this;
    }

    @Override
    public AccountInfo build() {
      return new AccountInfo(jid, userAccount, anchorAccount, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AccountInfo extends ProtoAdapter<AccountInfo> {
    ProtoAdapter_AccountInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, AccountInfo.class);
    }

    @Override
    public int encodedSize(AccountInfo value) {
      return (value.jid != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.jid) : 0)
          + (value.userAccount != null ? UserAccount.ADAPTER.encodedSizeWithTag(2, value.userAccount) : 0)
          + (value.anchorAccount != null ? AnchorAccount.ADAPTER.encodedSizeWithTag(3, value.anchorAccount) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AccountInfo value) throws IOException {
      if (value.jid != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.jid);
      if (value.userAccount != null) UserAccount.ADAPTER.encodeWithTag(writer, 2, value.userAccount);
      if (value.anchorAccount != null) AnchorAccount.ADAPTER.encodeWithTag(writer, 3, value.anchorAccount);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AccountInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.jid(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.userAccount(UserAccount.ADAPTER.decode(reader)); break;
          case 3: builder.anchorAccount(AnchorAccount.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AccountInfo redact(AccountInfo value) {
      Builder builder = value.newBuilder();
      if (builder.userAccount != null) builder.userAccount = UserAccount.ADAPTER.redact(builder.userAccount);
      if (builder.anchorAccount != null) builder.anchorAccount = AnchorAccount.ADAPTER.redact(builder.anchorAccount);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
